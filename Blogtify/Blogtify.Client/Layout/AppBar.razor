@using Bit.BlazorUI

@inject NavigationManager NavigationManager
@inject AppDataManager AppDataManager
@inject BitThemeManager BitThemeManager

<div class="appbar" style="var(@(IsDark? BitCss.Var.Color.Tertiary.Dark : BitCss.Var.Color.Tertiary.Light))">
    <BitStack Horizontal VerticalAlign="BitAlignment.Center">
        <div>
            <BitButton OnClick="OnToggleDrawer" AriaLabel="Bật tắt menu"
                       IconName="@BitIconName.ContextMenu"
                       Color="BitColor.Primary"
                       Class="toggle-menu-btn" />
        </div>

        <div class="logo" style="height: 30px">
            <a href="/" style="outline: none; border: none" tabindex="-1">
                <img src="logo.webp" alt="CodeMagic" width="30" height="30" lazy-loading />
            </a>
        </div>

    </BitStack>
    <BitStack Horizontal HorizontalAlign="BitAlignment.End" Style="width: 100%; gap: 0.5rem;">
        <BitSearchBox Placeholder="Tìm kiếm bài viết..."
                      MinSuggestTriggerChars="1" Color="BitColor.Info"
                      SuggestItemsProvider="ProvideSuggestions"
                      Modeless ThrottleTime="0"
                      SuggestItemTemplate="@RenderSuggestion"
                      DebounceTime="0" Immediate FixedIcon="true" NoBorder
                      OnSearch="OnSearchTriggered"
                      MaxSuggestCount="5"
                      Background="BitColorKind.Primary"
                      Style="flex: 1;" />

        <BitToggleButton OnIconName="@BitIconName.HazyDay" IsChecked="@(!IsDark)"
                         OffIconName="@BitIconName.HazyNight"
                         IconOnly AriaLabel="Dark Mode" Variant="BitVariant.Outline"
                         OnClick="@OnToggleTheme"
                         Style="flex-shrink: 0;" />

        <AuthorizeView>
            <Authorized>
                <form action="authentication/logout" method="post">
                    <AntiforgeryToken />
                    <input type="hidden" name="returnUrl" value="@NavigationManager.Uri" />
                    <BitButton ButtonType="BitButtonType.Submit">Đăng xuất</BitButton>
                </form>
            </Authorized>
            <NotAuthorized>
                <BitButton ButtonType="BitButtonType.Button"
                           OnClick="@(() => NavigationManager.NavigateTo($"authentication/login?returnUrl={@Uri.EscapeDataString(NavigationManager.Uri)}", forceLoad: true))">
                    Đăng nhập
                </BitButton>
            </NotAuthorized>
        </AuthorizeView>
    </BitStack>

</div>

@code {
    private bool IsDark = false;

    private RenderFragment<string> RenderSuggestion => (item)
        => @<BitStack FillContent
                      Horizontal Style="padding: 0.5rem; font-size: 0.9rem;">
    <BitIcon IconName="@BitIconName.BookAnswers" Color="BitColor.Secondary" Style="margin-right: 8px;" />
    <BitText Typography="BitTypography.Subtitle1" Color="BitColor.Secondary">@item</BitText>
</BitStack>
    ;

    [Parameter]
    public EventCallback OnToggleDrawer { get; set; }

    [Parameter]
    public EventCallback OnToggleTheme { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        var currentTheme = await BitThemeManager.GetCurrentThemeAsync();
        IsDark = currentTheme?.Contains("dark") ?? false;
        StateHasChanged();
    }


    private async ValueTask<IEnumerable<string>> ProvideSuggestions(BitSearchBoxSuggestItemsProviderRequest request)
    {
        if (string.IsNullOrWhiteSpace(request.SearchTerm))
            return Array.Empty<string>();

        var results = await AppDataManager.GetContentsAsync(request.SearchTerm, []);
        return results.Take(Constants.SearchPageSize).Select(r => r.Title).ToList();
    }

    private void OnSearchTriggered(string? text)
    {
        if (string.IsNullOrWhiteSpace(text)) return;
        NavigationManager.NavigateTo($"?Query={text}&Page=1");
    }
}
